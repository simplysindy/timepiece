{
  "name": "AC-Watches Pipeline",
  "version": 1,
  "entrypoints": {
    "scraping": {
      "command": "python -m src.scraping.scraping",
      "config": "conf/scraping.yaml",
      "toggles": ["pipeline.run_discovery", "pipeline.run_scraping", "pipeline.run_validation"]
    },
    "data_prep": {
      "command": "python -m src.data_prep.data_prep",
      "config": "conf/data_prep.yaml"
    },
    "training": {
      "command": "python -m src.training.training",
      "config": "conf/training.yaml"
    }
  },
  "configs": {
    "scraping": {
      "discovery": ["target_count_per_brand", "delay_range", "headless", "output_file"],
      "scraping": ["delay_range", "max_retries", "brand_delay", "output_dir", "headless"],
      "validation": ["data_dir", "min_rows", "move_invalid", "log_dir"],
      "brands": "{brand_name -> brand_url}",
      "logging": ["level", "format"]
    },
    "data_prep": {
      "data": ["input_dir", "output_dir", "max_files", "file_pattern"],
      "output": ["save_individual", "save_summary", "subdirs.processed", "subdirs.summary", "file_format", "include_index"],
      "processing": ["frequency", "min_data_points", "interpolation_method", "fill_limit", "outlier_method", "outlier_threshold", "handle_outliers", "max_missing_percent", "remove_duplicates", "sort_index"],
      "features": ["lag_periods", "rolling_windows", "rolling_stats", "price_change_periods", "include_technical", "technical_indicators", "include_watch_features", "watch_features", "include_temporal", "temporal_features", "target_shift"],
      "watch": ["price_column", "date_column", "luxury_tiers", "premium_brands"],
      "behavior": ["continue_on_error", "verbose", "validate_output", "overwrite_existing"],
      "summary": ["include_stats", "include_metadata"]
    },
    "training": {
      "data": ["path", "target_column"],
      "training": ["horizons", "models", "test_size", "val_size", "random_state", "max_samples"],
      "models": {
        "lightgbm": ["n_estimators", "learning_rate", "max_depth", "num_leaves", "early_stopping_rounds"],
        "xgboost": ["n_estimators", "learning_rate", "max_depth", "early_stopping_rounds"],
        "random_forest": ["n_estimators", "max_depth"],
        "linear": ["fit_intercept"],
        "ridge": ["alpha"],
        "lasso": ["alpha"]
      },
      "output": ["base_dir", "save_models", "save_predictions"]
    }
  },
  "components": [
    {
      "id": "discovery",
      "name": "WatchDiscovery",
      "type": "parser",
      "module": "src/scraping/discovery.py",
      "class_or_function": "WatchDiscovery",
      "inputs": ["brands", "discovery.*"],
      "outputs": ["data/targets/*.jsonl"],
      "errors": ["Cloudflare challenge", "timeout"],
      "logs": ["page counts", "unique link logs"]
    },
    {
      "id": "scraper",
      "name": "WatchScraper",
      "type": "scraper",
      "module": "src/scraping/core/base_scraper.py",
      "class_or_function": "WatchScraper.scrape_watches_batch",
      "inputs": ["watch targets", "scraping.*"],
      "outputs": ["data/watches/*.csv"],
      "errors": ["navigation retries", "screenshot on failure"],
      "logs": ["per-watch success", "new points added"]
    },
    {
      "id": "validator",
      "name": "WatchDataValidator",
      "type": "validator",
      "module": "src/scraping/validation.py",
      "class_or_function": "WatchDataValidator",
      "inputs": ["validation.*", "data/watches/*.csv"],
      "outputs": ["logs/csv_validation_*/", "data/watches/kiv/* (optional)"]
    },
    {
      "id": "processor",
      "name": "WatchDataProcessor",
      "type": "feature_eng",
      "module": "src/data_prep/process.py",
      "class_or_function": "WatchDataProcessor",
      "inputs": ["data/processed input_dir or raw per-watch CSVs", "data_prep.*"],
      "outputs": ["data/processed/*.csv", "data/processed/summary/watch_metadata.csv"]
    },
    {
      "id": "trainer",
      "name": "Training Orchestrator",
      "type": "trainer",
      "module": "src/training/training.py",
      "class_or_function": "main + helpers",
      "inputs": ["data/output/featured_data.csv (or individual processed files)"],
      "outputs": ["data/output/models/*.pkl", "data/output/models/metrics_summary.json"]
    }
  ],
  "datasets": [
    {
      "id": "targets",
      "name": "Watch Targets",
      "path": "data/targets/watch_targets.jsonl",
      "format": "jsonl",
      "schema": [
        { "name": "brand", "type": "string" },
        { "name": "model_name", "type": "string" },
        { "name": "url", "type": "string" },
        { "name": "source", "type": "string" }
      ],
      "producer": "discovery",
      "consumers": ["scraper"]
    },
    {
      "id": "raw_prices",
      "name": "Raw Watch Prices",
      "path": "data/watches/*.csv",
      "format": "csv",
      "schema": [
        { "name": "date", "type": "string", "pattern": "YYYY-MM-DD" },
        { "name": "price(SGD)", "type": "number" }
      ],
      "producer": "scraper",
      "consumers": ["validator", "processor"]
    },
    {
      "id": "processed_per_watch",
      "name": "Processed Per-Watch Features",
      "path": "data/processed/*.csv",
      "format": "csv",
      "schema": [
        { "name": "date", "type": "string" },
        { "name": "price(SGD)", "type": "number" },
        { "name": "watch_id", "type": "string" },
        { "name": "brand", "type": "string" },
        { "name": "model", "type": "string" },
        { "name": "target", "type": "number" }
      ],
      "producer": "processor",
      "consumers": ["trainer"]
    },
    {
      "id": "unified_training",
      "name": "Unified Training Dataset",
      "path": "data/output/featured_data.csv",
      "format": "csv",
      "schema": [
        { "name": "asset_id", "type": "string" },
        { "name": "target", "type": "number" }
      ],
      "producer": "trainer (combiner)",
      "consumers": ["trainer"]
    }
  ],
  "flow": [
    { "from": "discovery", "to": "targets", "description": "brand pages â†’ watch targets" },
    { "from": "targets", "to": "scraper", "description": "targets to scrape" },
    { "from": "scraper", "to": "raw_prices", "description": "per-watch CSVs" },
    { "from": "raw_prices", "to": "validator", "description": "quality checks" },
    { "from": "raw_prices", "to": "processor", "description": "clean/resample/features" },
    { "from": "processed_per_watch", "to": "unified_training", "description": "combine if unified missing" },
    { "from": "unified_training", "to": "trainer", "description": "temporal splits + training" }
  ],
  "training": {
    "algorithms": ["lightgbm", "xgboost", "random_forest", "linear", "ridge", "lstm"],
    "metrics": ["rmse", "mae", "r2", "mape", "directional_accuracy"],
    "splits": { "type": "temporal_per_asset", "val_size": 0.1, "test_size": 0.2, "random_state": 42 },
    "hyperparams": {
      "lightgbm": { "n_estimators": 100, "learning_rate": 0.1, "max_depth": -1, "num_leaves": 31, "early_stopping_rounds": 10 },
      "xgboost": { "n_estimators": 100, "learning_rate": 0.1, "max_depth": 6, "early_stopping_rounds": 10 },
      "random_forest": { "n_estimators": 100, "max_depth": null },
      "linear": { "fit_intercept": true },
      "ridge": { "alpha": 1.0 },
      "lasso": { "alpha": 1.0 }
    },
    "artifacts": ["data/output/models/*.pkl", "data/output/models/metrics_summary.json"]
  }
}

